{"version":3,"file":"static/js/640.8e902415.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","Redux/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Container.styled.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n\n`\nexport const Label = styled.label`\ndisplay: blok;\ntext-align: start;\ncolor: #696969;\n`\nexport const Input = styled.input`\npadding: 15px;\nborder-radius:7px;\n// border:0px;\nbackground-color: #C0C0C0;\ndisplay: block;\nmargin-top: 5px;\nmargin-bottom: 15px;\nwidth: 200px;  \ncolor: white;\nfont-size:18px;\nborder: 1px solid #FFDAB9;\n\n:focus {\n    outline-color: rgba(0,0,0,0);\n    background: rgba(255,255,255,.95);\n    color: #e74c3c;\n    border: 1px solid #FFDAB9;\n\n`\nexport const Button = styled.button`\nbackground-color: #2F4F4F;\ncolor: #FFFFFF;\nwidth: 100px;\nborder-radius:7px;\npadding: 8px;\n`","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = ({ contacts: { items }, filter }) => {\n  if (!filter) {\n    return items;\n  }\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'Redux/contactsFetch';\nimport { getContacts } from 'Redux/selectors';\nimport Notiflix from 'notiflix';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const phone = form.elements.number.value;\n    addContactFind({ name, phone });\n    form.reset();\n  };\n\n  const addContactFind = ({ name, phone }) => {\n    if (\n      contacts.find(\n        item =>\n          item.name.toLowerCase() === name.toLowerCase() || item.phone === phone\n      )\n    ) {\n      return Notiflix.Notify.info(`${name} or ${phone} is already in contacts`);\n    }\n\n    dispatch(addContact({ name, phone }));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        {' '}\n        Name\n        <Input\n          type=\"text\"\n          value={contacts.name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        {' '}\n        Phone number\n        <Input\n          type=\"tel\"\n          value={contacts.number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n`\nexport const Label = styled.label`\ndisplay: blok;\ntext-align: start;\ncolor: #696969;\n`\nexport const Input = styled.input`\npadding: 15px;\nborder-radius:7px;\n// border:0px;\nbackground-color: #C0C0C0;\ndisplay: block;\nmargin-top: 5px;\nmargin-bottom: 15px;\nwidth: 200px;  \ncolor: white;\nfont-size:18px;\nborder: 1px solid #FFDAB9;\n\n:focus {\n    outline-color: rgba(0,0,0,0);\n    background: rgba(255,255,255,.95);\n    color: #e74c3c;\n    border: 1px solid #FFDAB9;\n\n`","import { Div, Label, Input } from './Filter.styled';\nimport { setStatusFilter } from 'Redux/filtersSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'Redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <Div>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"name\"\n          value={filter}\n          onChange={e => dispatch(setStatusFilter(e.currentTarget.value))}\n        />\n      </Label>\n    </Div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\nlist-style: none;\npadding: 0;\n`\nexport const Li = styled.li`\n`\nexport const Button = styled.button`\nbackground-color: #2F4F4F;\ncolor: #FFFFFF;\nwidth: 100px;\nborder-radius:7px;\npadding: 8px;\n`\nexport const P = styled.p`\ncolor: #696969;\nfont-size:18px;\n`","import { Ul, Li, Button, P } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'Redux/contactsFetch';\nimport { getVisibleContacts } from 'Redux/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n \n  return (\n    <Ul>\n      {contacts.map(({ name, phone, id }) => (\n        <Li key={id}>\n          <P>\n            {name}: {phone}\n          </P>\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </Button>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div `\n border: 1px solid #FFDAB9;\nposition: relative;\nmargin: 50px auto;\n  width: 300px;\n  height: auto;\n  text-align: start;\n  padding: 30px;\n  background-color: #FFE4E1;\n  border-radius: 10px;\n`\nexport const H1 = styled.h1`\ncolor: #696969;\n`\nexport const H2 = styled.h2`\ncolor: #696969;\n`\nexport const P = styled.p`\ncolor: #696969;\nfont-size:18px;\n`","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Container, H1, H2 } from './Container.styled';\nimport {getIsLoading, getError} from '../Redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'Redux/contactsFetch';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function Contacts() {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <H1>Phonebook</H1>\n      <ContactForm />\n      <H2>Contacts </H2>\n      <Filter />\n      <ContactList />\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n    </Container>\n  );\n}"],"names":["Form","styled","Label","Input","Button","getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","getVisibleContacts","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","addContactFind","phone","find","item","Notiflix","addContact","onSubmit","e","preventDefault","form","target","elements","value","number","reset","type","pattern","title","required","Div","Filter","onChange","setStatusFilter","currentTarget","Ul","Li","P","ContactList","map","id","onClick","deleteContact","Container","H1","H2","Contacts","useEffect","fetchContacts"],"sourceRoot":""}